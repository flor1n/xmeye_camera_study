class PelcoP extends PtzBase{
	// 协议的显示名称, 最好与文件名直接对应，不能超过16字符
	Name = "PELCOP"
		
	// 指明是云台协议还是矩阵协议，使用"PTZ", "MATRIX"表示
	Type = "PTZ"
	
	// 以ms为单位
	Internal = 200		
	
	// 一下地址范围如无对应的地址范围，都设成0xFF
	
	// 云台地址范围
	CamAddrRange 		= [0x00, 0xFF]
	
	// 监视地址范围
	MonAddrRange		= [0x00, 0xFF]
	
	// 预置点范围
	PresetRange 		= [0x00, 0xFF]
	
	// 自动巡航线路范围
	TourRange			= [0x01, 0x01]
	
	// 轨迹线路范围
	PatternRange		= [0x01, 0x01]
	
	// 垂直速度范围
	TileSpeedRange 		= [0x01, 0x3F]
	
	// 水平速度范围
	PanSpeedRange 		= [0x01, 0x3F]
	
	// 辅助范围
	AuxRange 			= [0x01, 0x08]
	
	AddrPos 			= 1
	PresetPos 		= 5
	TileSpeedPos 	= 5
	PanSpeedPos 	= 4
	AuxPos 				= 5
	
	cmd = []
	
	StartOpr = {
		TileUp 		= [0xa0, 0x00, 0x00, 0x08, 0x00, 0x1F, 0xaf, 0x00],
		TileDown 	= [0xa0, 0x00, 0x00, 0x10, 0x00, 0x1F, 0xaf, 0x00],
		PanLeft 	= [0xa0, 0x00, 0x00, 0x04, 0x2f, 0x00, 0xaf, 0x00],
		PanRight 	= [0xa0, 0x00, 0x00, 0x02, 0x2f, 0x00, 0xaf, 0x00],
		LeftUp 		= [0xa0, 0x00, 0x00, 0x0c, 0x2f, 0x00, 0xaf, 0x00],
		LeftDown 	= [0xa0, 0x00, 0x00, 0x14, 0x2f, 0x00, 0xaf, 0x00],
		RightUp		= [0xa0, 0x00, 0x00, 0x0a, 0x2f, 0x00, 0xaf, 0x00],
		RightDown = [0xa0, 0x00, 0x00, 0x12, 0x2f, 0x00, 0xaf, 0x00],
		
		ZoomWide 	= [0xa0, 0x00, 0x00, 0x40, 0x00, 0x00, 0xaf, 0x00],
		ZoomTele 	= [0xa0, 0x00, 0x00, 0x20, 0x00, 0x00, 0xaf, 0x00],
		FocusNear	= [0xa0, 0x00, 0x02, 0x00, 0x00, 0x00, 0xaf, 0x00],
		FocusFar 	= [0xa0, 0x00, 0x01, 0x00, 0x00, 0x00, 0xaf, 0x00],
		IrisSmall	= [0xa0, 0x00, 0x08, 0x00, 0x00, 0x00, 0xaf, 0x00],
		IrisLarge	= [0xa0, 0x00, 0x04, 0x00, 0x00, 0x00, 0xaf, 0x00],	
		
		LightOn		= [0xa0, 0x00, 0x50, 0x00, 0x00, 0x00, 0xaf,0x00],
		LightOff  = [0xa0, 0x00, 0x00, 0x00, 0x00, 0x00, 0xaf,0x00],
		
		SetPreset 	= [0xa0, 0x00, 0x00, 0x03, 0x00, 0x21, 0xaf, 0x00],
		ClearPreset	= [0xa0, 0x00, 0x00, 0x05, 0x00, 0x21, 0xaf, 0x00],
		GoToPreset 	= [0xa0, 0x00, 0x00, 0x07, 0x00, 0x21, 0xaf, 0x00],
		
		SetLeftLimit 	= [0xa0, 0x00, 0x00, 0x11, 0x00, 0x21, 0xaf, 0x00],
		SetRightLimit	= [0xa0, 0x00, 0x00, 0x13, 0x00, 0x21, 0xaf, 0x00], 
		
		AutoScanOn 		= [0xa0, 0x00, 0x00, 0x1B, 0x00, 0x21, 0xaf, 0x00],
		AutoScanOff		= [0xa0, 0x00, 0x00, 0x1D, 0x00, 0x21, 0xaf, 0x00],
		
		SetPatternStart = [0xa0, 0x00, 0x00, 0x1f, 0x00, 0x21, 0xaf, 0x00],
		SetPatternStop 	= [0xa0, 0x00, 0x00, 0x21, 0x00, 0x21, 0xaf, 0x00],
		StartPattern 		= [0xa0, 0x00, 0x00, 0x23, 0x00, 0x21, 0xaf, 0x00],
    StopPattern     = [0xa0, 0x00, 0x00, 0x00, 0x00, 0x00, 0xaf, 0x00],  
    AuxOn 	= [0xa0, 0x00, 0x00, 0x09, 0x00, 0x21, 0xaf, 0x00],
		AuxOff 	= [0xa0, 0x00, 0x00, 0x0b, 0x00, 0x21, 0xaf, 0x00]
	}
	
	StopOpr = {
		TileUp 		= [0xa0, 0x00, 0x00, 0x00, 0x00, 0x00, 0xaf, 0x00],
		TileDown 	= [0xa0, 0x00, 0x00, 0x00, 0x00, 0x00, 0xaf, 0x00],
		PanLeft 	= [0xa0, 0x00, 0x00, 0x00, 0x00, 0x00, 0xaf, 0x00],
		PanRight 	= [0xa0, 0x00, 0x00, 0x00, 0x00, 0x00, 0xaf, 0x00],
		LeftUp 		= [0xa0, 0x00, 0x00, 0x00, 0x00, 0x00, 0xaf, 0x00],
		LeftDown 	= [0xa0, 0x00, 0x00, 0x00, 0x00, 0x00, 0xaf, 0x00],
		RightUp		= [0xa0, 0x00, 0x00, 0x00, 0x00, 0x00, 0xaf, 0x00],
		RightDown = [0xa0, 0x00, 0x00, 0x00, 0x00, 0x00, 0xaf, 0x00],
		ZoomWide 	= [0xa0, 0x00, 0x00, 0x00, 0x00, 0x00, 0xaf, 0x00],
		ZoomTele 	= [0xa0, 0x00, 0x00, 0x00, 0x00, 0x00, 0xaf, 0x00],
		FocusNear = [0xa0, 0x00, 0x00, 0x00, 0x00, 0x00, 0xaf, 0x00],
		FocusFar 	= [0xa0, 0x00, 0x00, 0x00, 0x00, 0x00, 0xaf, 0x00],
		IrisSmall = [0xa0, 0x00, 0x00, 0x00, 0x00, 0x00, 0xaf, 0x00],
		IrisLarge = [0xa0, 0x00, 0x00, 0x00, 0x00, 0x00, 0xaf, 0x00]
	}
	
	function CheckSum()
	{
		local value = cmd[0];
		local i = 0;
		for (i = 1; i < 7; i++)
		{
			value = value ^ cmd[i];
		}
		cmd[7] = value % 0xFF;
	}
	
	function setSpeed(ver, hor)
  {
  	//if (cmd[3] != 0)
	  //{
	  	cmd[TileSpeedPos] = ver;
	  	cmd[PanSpeedPos] = hor;
	  //}
  }
}

local cPelcoP = PelcoP();

return cPelcoP;